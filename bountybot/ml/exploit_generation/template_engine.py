"""Template engine for exploit generation."""

import logging
from typing import Dict, List

from bountybot.ml.exploit_generation.models import (
    ExploitType,
    PayloadTemplate,
    ExploitComplexity
)

logger = logging.getLogger(__name__)


class TemplateEngine:
    """Manage exploit templates."""
    
    def __init__(self):
        self.templates: Dict[ExploitType, List[PayloadTemplate]] = {}
        self._load_templates()
    
    def _load_templates(self):
        """Load exploit templates."""
        self.templates[ExploitType.SQL_INJECTION] = [
            PayloadTemplate(
                exploit_type=ExploitType.SQL_INJECTION,
                template_string="' OR '1'='1' --",
                parameters=[],
                description="Basic SQL injection",
                complexity=ExploitComplexity.SIMPLE
            )
        ]
    
    def get_template(self, exploit_type: ExploitType) -> PayloadTemplate:
        """Get template for exploit type."""
        templates = self.templates.get(exploit_type, [])
        return templates[0] if templates else None

