"""Exploit validator for safety checks."""

import logging

from bountybot.ml.exploit_generation.models import ExploitResult, ExploitConfig

logger = logging.getLogger(__name__)


class ExploitValidator:
    """Validate exploits for safety."""
    
    DANGEROUS_PATTERNS = [
        'rm -rf',
        'DROP DATABASE',
        'format c:',
        'del /f /s /q',
    ]
    
    def __init__(self, config: ExploitConfig):
        self.config = config
    
    def validate(self, exploit: ExploitResult) -> bool:
        """Validate exploit safety."""
        # Check for dangerous patterns
        for pattern in self.DANGEROUS_PATTERNS:
            if pattern.lower() in exploit.payload.lower():
                logger.warning(f"Dangerous pattern detected: {pattern}")
                return False
        
        # Check payload length
        if len(exploit.payload) > self.config.max_payload_length:
            logger.warning("Payload exceeds maximum length")
            return False
        
        return True

