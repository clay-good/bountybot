# bountybot Configuration
api:
  default_provider: anthropic
  providers:
    anthropic:
      api_key: ${ANTHROPIC_API_KEY}
      model: claude-sonnet-4-20250514
      max_tokens: 8192
      temperature: 0.3
      rate_limit:
        requests_per_minute: 50
        tokens_per_minute: 160000
    openai:
      api_key: ${OPENAI_API_KEY}
      model: gpt-4-turbo-preview
      max_tokens: 4096
      temperature: 0.3
      rate_limit:
        requests_per_minute: 500
        tokens_per_minute: 150000
    gemini:
      api_key: ${GEMINI_API_KEY}
      model: gemini-1.5-pro
      max_tokens: 8192
      temperature: 0.3
      rate_limit:
        requests_per_minute: 60

validation:
  parallel_tasks: 4
  cache_ttl: 3600
  confidence_threshold: 60

deduplication:
  enabled: true
  exact_match_threshold: 0.95
  fuzzy_match_threshold: 0.85
  duplicate_threshold: 0.75
  persistence_file: ./data/report_fingerprints.json

scoring:
  cvss_enabled: true
  auto_calculate: true
  include_temporal_metrics: true

false_positive_detection:
  enabled: true
  fp_threshold: 0.6  # 60% confidence threshold
  min_evidence_score: 40  # Minimum evidence quality score

exploit_complexity:
  enabled: true
  include_prerequisites: true
  include_barriers: true

attack_chains:
  enabled: true
  min_chain_length: 2  # Minimum vulnerabilities to consider a chain
  detect_amplification: true

# Dynamic security scanning
dynamic_scanning:
  enabled: false  # Set to true to enable (requires --target flag)
  timeout: 10  # Request timeout in seconds
  max_requests: 100  # Maximum requests per scan
  delay: 0.5  # Delay between requests in seconds
  verify_ssl: true  # Verify SSL certificates
  user_agent: "BountyBot-Scanner/2.3.0"
  scan_types:  # Vulnerability types to scan for
    - sqli
    - xss
    - cmdi
    - path_traversal
    - ssrf
    - open_redirect

# Remediation prioritization
prioritization:
  enabled: true
  weights:
    cvss: 0.30              # CVSS base score weight
    exploitability: 0.25    # Exploit complexity weight
    confidence: 0.20        # Confidence/FP weight
    chain_amplification: 0.15  # Attack chain weight
    business_impact: 0.10   # Business impact weight
  critical_components:
    - authentication
    - payment
    - database
    - api
    - admin
    - user_data

# Database configuration
database:
  enabled: false  # Set to true to enable persistent storage
  # PostgreSQL (production)
  url: "postgresql://bountybot:password@localhost:5432/bountybot"
  # SQLite (development/testing)
  # url: "sqlite:///bountybot.db"
  echo: false  # Set to true to log SQL statements
  pool_size: 5
  max_overflow: 10
  auto_migrate: true  # Automatically apply migrations on startup

code_analysis:
  enabled: true
  languages:
    - python
    - javascript
    - java
    - php
    - ruby
  exclude_patterns:
    - "*/node_modules/*"
    - "*/.venv/*"
    - "*/vendor/*"
    - "*/__pycache__/*"
    - "*/build/*"
    - "*/.git/*"
  max_file_size_mb: 10
  
target_testing:
  enabled: false
  timeout_seconds: 10
  max_requests: 20
  safe_methods_only: true
  respect_rate_limits: true
  
output:
  formats:
    - json
    - markdown
  directory: ./validation_results
  include_timestamps: true
  
cost_management:
  max_cost_per_validation: 5.00
  max_daily_cost: 100.00
  warning_threshold: 0.80
  track_usage: true

logging:
  level: INFO
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: bountybot.log
  structured_logging: false  # Enable JSON structured logging
  redact_sensitive: true  # Redact sensitive data in logs
  include_context: true  # Include request context in logs

# Integration Hub - Connect with external tools
integrations:
  enabled: false  # Disabled by default - enable in production

  # JIRA Integration
  jira:
    enabled: false
    type: jira
    config:
      url: "https://your-domain.atlassian.net"
      username: "${JIRA_USERNAME}"
      api_token: "${JIRA_API_TOKEN}"
      project_key: "SEC"
      issue_type: "Bug"
      priority_mapping:
        CRITICAL: "Highest"
        HIGH: "High"
        MEDIUM: "Medium"
        LOW: "Low"
        INFO: "Lowest"
    trigger_on_valid: true
    trigger_on_invalid: false
    trigger_on_uncertain: true
    min_severity: "MEDIUM"
    min_confidence: 70
    rate_limit_enabled: true
    max_calls_per_hour: 100

  # Slack Integration
  slack:
    enabled: false
    type: slack
    config:
      webhook_url: "${SLACK_WEBHOOK_URL}"
      channel: "#security-alerts"
      username: "BountyBot"
      icon_emoji: ":shield:"
      mention_users: []  # List of user IDs to mention for critical issues
      mention_channels: ["here"]  # Mention @here for critical issues
      include_details: true
    trigger_on_valid: true
    trigger_on_invalid: false
    trigger_on_uncertain: true
    min_severity: "HIGH"
    min_confidence: 60
    rate_limit_enabled: true
    max_calls_per_hour: 200

  # GitHub Integration
  github:
    enabled: false
    type: github
    config:
      token: "${GITHUB_TOKEN}"
      owner: "your-org"
      repo: "security-issues"
      labels: ["security", "bountybot"]
      assignees: []  # List of GitHub usernames
      milestone: null  # Milestone number (optional)
    trigger_on_valid: true
    trigger_on_invalid: false
    trigger_on_uncertain: false
    min_severity: "MEDIUM"
    min_confidence: 75
    rate_limit_enabled: true
    max_calls_per_hour: 100

  # PagerDuty Integration
  pagerduty:
    enabled: false
    type: pagerduty
    config:
      integration_key: "${PAGERDUTY_INTEGRATION_KEY}"
      severity_mapping:
        CRITICAL: "critical"
        HIGH: "error"
        MEDIUM: "warning"
        LOW: "info"
        INFO: "info"
      auto_resolve: false  # Auto-resolve incidents for invalid reports
      dedup_key_prefix: "bountybot"
    trigger_on_valid: true
    trigger_on_invalid: false
    trigger_on_uncertain: false
    min_severity: "CRITICAL"
    min_confidence: 80
    rate_limit_enabled: true
    max_calls_per_hour: 50

  # Email Integration
  email:
    enabled: false
    type: email
    config:
      smtp_host: "smtp.gmail.com"
      smtp_port: 587
      smtp_username: "${EMAIL_USERNAME}"
      smtp_password: "${EMAIL_PASSWORD}"
      use_tls: true
      from_address: "bountybot@example.com"
      to_addresses:
        - "security@example.com"
      cc_addresses: []
      subject_prefix: "[BountyBot]"
      include_html: true
    trigger_on_valid: true
    trigger_on_invalid: false
    trigger_on_uncertain: true
    min_severity: "HIGH"
    min_confidence: 70
    rate_limit_enabled: true
    max_calls_per_hour: 100

