# BountyBot Environment Configuration
# Copy this file to .env and fill in your values

# =============================================================================
# AI Provider Configuration (Required)
# =============================================================================

# Anthropic (Claude) - Primary AI provider
ANTHROPIC_API_KEY=your-anthropic-api-key-here

# OpenAI (GPT-4) - Optional fallback provider
# OPENAI_API_KEY=your-openai-api-key-here

# Google (Gemini) - Optional fallback provider
# GEMINI_API_KEY=your-gemini-api-key-here

# =============================================================================
# Database Configuration (Optional)
# =============================================================================

# PostgreSQL (Production)
# DATABASE_URL=postgresql://bountybot:password@localhost:5432/bountybot

# SQLite (Development/Testing)
# DATABASE_URL=sqlite:///bountybot.db

# Database connection pool settings
# DATABASE_POOL_SIZE=5
# DATABASE_MAX_OVERFLOW=10

# =============================================================================
# Cost Management (Optional)
# =============================================================================

# Maximum cost per single validation run (USD)
BOUNTYBOT_MAX_COST_PER_RUN=10.0

# Daily budget limit (USD)
BOUNTYBOT_DAILY_BUDGET=500.0

# Warning threshold (percentage of budget)
BOUNTYBOT_WARNING_THRESHOLD=0.80

# =============================================================================
# Performance Tuning (Optional)
# =============================================================================

# Number of parallel tasks for batch processing
BOUNTYBOT_PARALLEL_TASKS=4

# Number of worker threads for batch processing
BOUNTYBOT_BATCH_WORKERS=3

# Cache TTL in seconds (default: 3600 = 1 hour)
BOUNTYBOT_CACHE_TTL=3600

# AI provider rate limit (requests per minute)
BOUNTYBOT_RATE_LIMIT=50

# =============================================================================
# Logging Configuration (Optional)
# =============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
BOUNTYBOT_LOG_LEVEL=INFO

# Log file path
BOUNTYBOT_LOG_FILE=./logs/bountybot.log

# Enable JSON structured logging
BOUNTYBOT_JSON_LOGGING=true

# Enable sensitive data redaction
BOUNTYBOT_REDACT_SENSITIVE=true

# =============================================================================
# Output Configuration (Optional)
# =============================================================================

# Output directory for validation results
BOUNTYBOT_OUTPUT_DIR=./validation_results

# Default output format: json, markdown, html, terminal
BOUNTYBOT_OUTPUT_FORMAT=json

# Enable HTML report generation
BOUNTYBOT_ENABLE_HTML=true

# =============================================================================
# Code Analysis (Optional)
# =============================================================================

# Enable code analysis features
BOUNTYBOT_CODE_ANALYSIS_ENABLED=true

# Maximum file size for code analysis (MB)
BOUNTYBOT_MAX_FILE_SIZE_MB=10

# Supported languages for code analysis
BOUNTYBOT_SUPPORTED_LANGUAGES=python,javascript,java,php,ruby

# =============================================================================
# Validation Configuration (Optional)
# =============================================================================

# Minimum confidence threshold for valid reports (0-100)
BOUNTYBOT_MIN_CONFIDENCE=70.0

# Enable CVSS scoring
BOUNTYBOT_ENABLE_CVSS=true

# Enable duplicate detection
BOUNTYBOT_ENABLE_DUPLICATE_DETECTION=true

# Enable false positive detection
BOUNTYBOT_ENABLE_FP_DETECTION=true

# Enable exploit complexity analysis
BOUNTYBOT_ENABLE_COMPLEXITY_ANALYSIS=true

# Enable attack chain detection
BOUNTYBOT_ENABLE_CHAIN_DETECTION=true

# Enable remediation prioritization
BOUNTYBOT_ENABLE_PRIORITIZATION=true

# =============================================================================
# Duplicate Detection (Optional)
# =============================================================================

# Exact match threshold (0.0-1.0)
BOUNTYBOT_EXACT_THRESHOLD=0.95

# Fuzzy match threshold (0.0-1.0)
BOUNTYBOT_FUZZY_THRESHOLD=0.85

# HTTP fingerprint threshold (0.0-1.0)
BOUNTYBOT_HTTP_THRESHOLD=0.90

# Payload similarity threshold (0.0-1.0)
BOUNTYBOT_PAYLOAD_THRESHOLD=0.85

# =============================================================================
# False Positive Detection (Optional)
# =============================================================================

# FP confidence threshold (0-100)
BOUNTYBOT_FP_CONFIDENCE_THRESHOLD=70.0

# Minimum evidence quality score (0-100)
BOUNTYBOT_MIN_EVIDENCE_QUALITY=60.0

# =============================================================================
# Prioritization (Optional)
# =============================================================================

# Priority score weights (must sum to 1.0)
BOUNTYBOT_WEIGHT_CVSS=0.30
BOUNTYBOT_WEIGHT_EXPLOITABILITY=0.25
BOUNTYBOT_WEIGHT_CONFIDENCE=0.20
BOUNTYBOT_WEIGHT_CHAIN=0.15
BOUNTYBOT_WEIGHT_BUSINESS=0.10

# Critical components (comma-separated)
BOUNTYBOT_CRITICAL_COMPONENTS=authentication,payment,database,api,admin

# =============================================================================
# Analytics (Optional)
# =============================================================================

# Enable analytics collection
BOUNTYBOT_ENABLE_ANALYTICS=true

# Analytics retention period (days)
BOUNTYBOT_ANALYTICS_RETENTION=90

# Enable trend analysis
BOUNTYBOT_ENABLE_TRENDS=true

# =============================================================================
# Integration (Optional)
# =============================================================================

# HackerOne integration
# HACKERONE_API_TOKEN=your-hackerone-token
# HACKERONE_API_USERNAME=your-username

# Bugcrowd integration
# BUGCROWD_API_TOKEN=your-bugcrowd-token

# Jira integration
# JIRA_URL=https://your-company.atlassian.net
# JIRA_USERNAME=your-email@company.com
# JIRA_API_TOKEN=your-jira-token
# JIRA_PROJECT_KEY=SEC

# Slack notifications
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# Email notifications
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=your-email@company.com
# SMTP_PASSWORD=your-app-password
# SMTP_FROM=bountybot@company.com
# SMTP_TO=security-team@company.com

# =============================================================================
# Security (Optional)
# =============================================================================

# API key for REST API (if enabled)
# BOUNTYBOT_API_KEY=your-secure-api-key

# JWT secret for authentication (if enabled)
# BOUNTYBOT_JWT_SECRET=your-jwt-secret-key

# Enable HTTPS only
# BOUNTYBOT_HTTPS_ONLY=true

# =============================================================================
# Development (Optional)
# =============================================================================

# Enable debug mode
# BOUNTYBOT_DEBUG=false

# Enable verbose output
# BOUNTYBOT_VERBOSE=false

# Enable AI provider echo (log all requests)
# BOUNTYBOT_AI_ECHO=false

# Disable caching (for testing)
# BOUNTYBOT_DISABLE_CACHE=false

# =============================================================================
# Notes
# =============================================================================

# 1. Copy this file to .env: cp .env.example .env
# 2. Fill in at minimum the ANTHROPIC_API_KEY
# 3. Uncomment and configure optional settings as needed
# 4. Never commit .env to version control
# 5. Keep your API keys secure and rotate them regularly

