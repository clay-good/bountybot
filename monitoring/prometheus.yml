# Prometheus Configuration for BountyBot

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'bountybot'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "alerts/*.yml"

# Scrape configurations
scrape_configs:
  # BountyBot API metrics
  - job_name: 'bountybot-api'
    scrape_interval: 15s
    metrics_path: '/metrics/prometheus'
    static_configs:
      - targets:
          - 'api:8000'
        labels:
          service: 'api'
          component: 'bountybot'
    
    # Relabeling for better metric organization
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - source_labels: [__address__]
        regex: '([^:]+)(?::\d+)?'
        target_label: host
        replacement: '$1'

  # BountyBot Dashboard metrics
  - job_name: 'bountybot-dashboard'
    scrape_interval: 15s
    metrics_path: '/metrics/prometheus'
    static_configs:
      - targets:
          - 'dashboard:8080'
        labels:
          service: 'dashboard'
          component: 'bountybot'

  # PostgreSQL metrics (using postgres_exporter)
  - job_name: 'postgres'
    scrape_interval: 30s
    static_configs:
      - targets:
          - 'postgres-exporter:9187'
        labels:
          service: 'database'
          component: 'postgres'

  # Redis metrics (using redis_exporter)
  - job_name: 'redis'
    scrape_interval: 30s
    static_configs:
      - targets:
          - 'redis-exporter:9121'
        labels:
          service: 'cache'
          component: 'redis'

  # Node exporter for system metrics
  - job_name: 'node'
    scrape_interval: 30s
    static_configs:
      - targets:
          - 'node-exporter:9100'
        labels:
          service: 'system'
          component: 'node'

  # Prometheus self-monitoring
  - job_name: 'prometheus'
    scrape_interval: 30s
    static_configs:
      - targets:
          - 'localhost:9090'
        labels:
          service: 'monitoring'
          component: 'prometheus'

  # Grafana metrics
  - job_name: 'grafana'
    scrape_interval: 30s
    static_configs:
      - targets:
          - 'grafana:3000'
        labels:
          service: 'monitoring'
          component: 'grafana'

  # Kubernetes service discovery (if running in K8s)
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      # Only scrape pods with prometheus.io/scrape annotation
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      # Use custom metrics path if specified
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      # Use custom port if specified
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      # Add pod metadata as labels
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

